#!/bin/sh
# xlint TEMPLATE - scan XBPS template for common mistakes

export LC_ALL=C

scan() {
	local rx="$1" msg="$2"
	grep -P -Hn -e "$rx" "$template" |
		sed "s/^\([^:]*:[^:]*:\)\(.*\)/\1 $msg/"
}

once() {
	head -n 1
}

header() {
	if [ "$(head -n1 "$template")" != "# Template file for '$pkgname'" ]; then
		echo "$template:1: Header should be: # Template file for '$pkgname'"
	fi
}

variables_order() {
	local curr_index max_index max_index_line variables_end message line
	max_index=0
	while IFS="" read -r line; do
		case "$line" in
			pkgname=*) curr_index=1;;
			reverts=*) curr_index=2;;
			version=*) curr_index=3;;
			revision=*) curr_index=4;;
			archs=*) curr_index=5;;
			revision=*) curr_index=6;;
			wrksrc=*) curr_index=7;;
			create_wrksrc=*) curr_index=8;;
			build_wrksrc=*) curr_index=9;;
			only_for_archs=*) continue;;
			build_style=*) curr_index=11;;
			build_helper=*) curr_index=11;;
			cmake_args=*) curr_index=12;;
			cmake_builddir=*) curr_index=12;;
			configure_args=*) curr_index=12;;
			configure_script=*) curr_index=12;;
			go_build_tags=*) curr_index=12;;
			go_get=*) curr_index=12;;
			go_import_path=*) curr_index=12;;
			go_ldflags=*) curr_index=12;;
			go_package=*) curr_index=12;;
			go_mod_mode=*) curr_index=12;;
			make_build_args=*) curr_index=12;;
			make_build_target=*) curr_index=12;;
			make_check_args=*) curr_index=12;;
			make_check_target=*) curr_index=12;;
			make_cmd=*) curr_index=12;;
			make_install_args=*) curr_index=12;;
			make_install_target=*) curr_index=12;;
			make_use_env=*) curr_index=12;;
			meson_builddir=*) curr_index=12;;
			meson_cmd=*) curr_index=12;;
			meson_crossfile=*) curr_index=12;;
			perl_configure_dirs=*) curr_index=12;;
			pycompile_dirs=*) curr_index=12;;
			pycompile_module=*) curr_index=12;;
			python_versions=*) curr_index=12;;
			stackage=*) curr_index=12;;
			conf_files=*) continue;;
			make_dirs=*) continue;;
			hostmakedepends=*) curr_index=15;;
			makedepends=*) curr_index=16;;
			depends=*) curr_index=17;;
			checkdepends=*) curr_index=18;;
			short_desc=*) curr_index=19;;
			maintainer=*) curr_index=20;;
			license=*) curr_index=21;;
			homepage=*) curr_index=22;;
			changelog=*) curr_index=23;;
			distfiles=*) curr_index=24;;
			checksum=*) curr_index=25;;
			alternatives=*) curr_index=26;;
			fetch_cmd=*) curr_index=26;;
			bootstrap=*) continue;;
			"#"*) continue;;
			" "*) continue;;
			"	"*) continue;;
			"_"*"="*) continue;;
			*"="*) curr_index=27;;
			"") variables_end=1;;
			*"{") variables_end=1;;
			*) continue;;
		esac

		if [ "$variables_end" ]; then
			break
		elif [ "$curr_index" -lt "$max_index" ]; then
			message="$template: Place $max_index_line= after ${line%%=*}="
		elif [ "$curr_index" -gt "$max_index" ]; then
			max_index="$curr_index"
			max_index_line="${line%%=*}"
			if [ "$message" ]; then
				echo "$message"
				message=
			fi
		fi
	done < "$template"
	[ "$message" ] && echo "$message"
}

variables=$(echo -n "#.*
_.*
.*_descr
.*_groups
.*_homedir
.*_pgroup
.*_shell
desc_option_.*
AR
AS
CC
CFLAGS
CPP
CPPFLAGS
CXX
CXXFLAGS
GCC
LD
LDFLAGS
LD_LIBRARY_PATH
NM
OBJCOPY
OBJDUMP
RANLIB
READELF
STRIP
XBPS_FETCH_CMD
allow_unknown_shlibs
alternatives
archs
binfmts
bootstrap
broken
build_options
build_options_default
build_style
build_helper
build_wrksrc
changelog
checkdepends
checksum
cmake_builddir
conf_files
configure_args
configure_script
conflicts
create_wrksrc
depends
disable_parallel_build
distfiles
dkms_modules
fetch_cmd
font_dirs
force_debug_pkgs
go_build_tags
go_get
go_import_path
go_ldflags
go_package
go_mod_mode
homepage
hostmakedepends
keep_libtool_archives
kernel_hooks_version
lib32depends
lib32disabled
lib32files
lib32mode
lib32symlinks
license
maintainer
make_build_args
make_build_target
make_check_args
make_check_target
make_cmd
make_dirs
make_install_args
make_install_target
make_use_env
makedepends
mutable_files
nocross
nodebug
nopie
noshlibprovides
nostrip
nostrip_files
noverifyrdeps
only_for_archs
patch_args
pkgname
preserve
provides
pycompile_dirs
pycompile_module
pycompile_version
python_version
register_shell
replaces
repository
restricted
reverts
revision
run_depends
sgml_catalogs
sgml_entries
shlib_provides
shlib_requires
short_desc
skip_extraction
skiprdeps
stackage
subpackages
system_accounts
system_groups
tags
triggers
version
wrksrc
xml_catalogs
xml_entries" | tr '\n' '|')

licenses=$(echo -n "0BSD
AAL
Abstyles
Adobe-2006
Adobe-Glyph
ADSL
AFL-1.1
AFL-1.2
AFL-2.0
AFL-2.1
AFL-3.0
Afmparse
AGPL-1.0-only
AGPL-1.0-or-later
AGPL-3.0-only
AGPL-3.0-or-later
Aladdin
AMDPLPA
AML
AMPAS
ANTLR-PD
Apache-1.0
Apache-1.1
Apache-2.0
APAFML
APL-1.0
APSL-1.0
APSL-1.1
APSL-1.2
APSL-2.0
Artistic-1.0-cl8
Artistic-1.0-Perl
Artistic-1.0
Artistic-2.0
Bahyph
Barr
Beerware
BitTorrent-1.0
BitTorrent-1.1
Borceux
BSD-1-Clause
BSD-2-Clause-FreeBSD
BSD-2-Clause-NetBSD
BSD-2-Clause-Patent
BSD-2-Clause
BSD-3-Clause-Attribution
BSD-3-Clause-Clear
BSD-3-Clause-LBNL
BSD-3-Clause-No-Nuclear-License-2014
BSD-3-Clause-No-Nuclear-License
BSD-3-Clause-No-Nuclear-Warranty
BSD-3-Clause
BSD-4-Clause-UC
BSD-4-Clause
BSD-Protection
BSD-Source-Code
BSL-1.0
bzip2-1.0.5
bzip2-1.0.6
Caldera
CATOSL-1.1
CC-BY-1.0
CC-BY-2.0
CC-BY-2.5
CC-BY-3.0
CC-BY-4.0
CC-BY-NC-1.0
CC-BY-NC-2.0
CC-BY-NC-2.5
CC-BY-NC-3.0
CC-BY-NC-4.0
CC-BY-NC-ND-1.0
CC-BY-NC-ND-2.0
CC-BY-NC-ND-2.5
CC-BY-NC-ND-3.0
CC-BY-NC-ND-4.0
CC-BY-NC-SA-1.0
CC-BY-NC-SA-2.0
CC-BY-NC-SA-2.5
CC-BY-NC-SA-3.0
CC-BY-NC-SA-4.0
CC-BY-ND-1.0
CC-BY-ND-2.0
CC-BY-ND-2.5
CC-BY-ND-3.0
CC-BY-ND-4.0
CC-BY-SA-1.0
CC-BY-SA-2.0
CC-BY-SA-2.5
CC-BY-SA-3.0
CC-BY-SA-4.0
CC0-1.0
CDDL-1.0
CDDL-1.1
CDLA-Permissive-1.0
CDLA-Sharing-1.0
CECILL-1.0
CECILL-1.1
CECILL-2.0
CECILL-2.1
CECILL-B
CECILL-C
ClArtistic
CNRI-Jython
CNRI-Python-GPL-Compatible
CNRI-Python
Condor-1.1
copyleft-next-0.3.0
copyleft-next-0.3.1
CPAL-1.0
CPL-1.0
CPOL-1.02
Crossword
CrystalStacker
CUA-OPL-1.0
Cube
curl
D-FSL-1.0
diffmark
DOC
Dotseqn
DSDP
dvipdfm
ECL-1.0
ECL-2.0
EFL-1.0
EFL-2.0
eGenix
Entessa
EPL-1.0
EPL-2.0
ErlPL-1.1
EUDatagrid
EUPL-1.0
EUPL-1.1
EUPL-1.2
Eurosym
Fair
Frameworx-1.0
FreeImage
FSFAP
FSFUL
FSFULLR
FTL
GFDL-1.1-only
GFDL-1.1-or-later
GFDL-1.2-only
GFDL-1.2-or-later
GFDL-1.3-only
GFDL-1.3-or-later
Giftware
GL2PS
Glide
Glulxe
gnuplot
GPL-1.0-only
GPL-1.0-or-later
GPL-2.0-only
GPL-2.0-or-later
GPL-3.0-only
GPL-3.0-or-later
gSOAP-1.3b
HaskellReport
HPND
IBM-pibs
ICU
IJG
ImageMagick
iMatix
Imlib2
Info-ZIP
Intel-ACPI
Intel
Interbase-1.0
IPA
IPL-1.0
ISC
JasPer-2.0
JSON
LAL-1.2
LAL-1.3
Latex2e
Leptonica
LGPL-2.0-only
LGPL-2.0-or-later
LGPL-2.1-only
LGPL-2.1-or-later
LGPL-3.0-only
LGPL-3.0-or-later
LGPLLR
Libpng
libtiff
LiLiQ-P-1.1
LiLiQ-R-1.1
LiLiQ-Rplus-1.1
Linux-OpenIB
LPL-1.0
LPL-1.02
LPPL-1.0
LPPL-1.1
LPPL-1.2
LPPL-1.3a
LPPL-1.3c
MakeIndex
MirOS
MIT-0
MIT-advertising
MIT-CMU
MIT-enna
MIT-feh
MIT
MITNFA
Motosoto
mpich2
MPL-1.0
MPL-1.1
MPL-2.0-no-copyleft-exception
MPL-2.0
MS-PL
MS-RL
MTLL
Multics
Mup
NASA-1.3
Naumen
NBPL-1.0
NCSA
Net-SNMP
NetCDF
Newsletr
NGPL
NLOD-1.0
NLPL
Nokia
NOSL
Noweb
NPL-1.0
NPL-1.1
NPOSL-3.0
NRL
NTP
OCCT-PL
OCLC-2.0
ODbL-1.0
ODC-By-1.0
OFL-1.0
OFL-1.1
OGL-UK-1.0
OGL-UK-2.0
OGL-UK-3.0
OGTSL
OLDAP-1.1
OLDAP-1.2
OLDAP-1.3
OLDAP-1.4
OLDAP-2.0.1
OLDAP-2.0
OLDAP-2.1
OLDAP-2.2.1
OLDAP-2.2.2
OLDAP-2.2
OLDAP-2.3
OLDAP-2.4
OLDAP-2.5
OLDAP-2.6
OLDAP-2.7
OLDAP-2.8
OML
OpenSSL
OPL-1.0
OSET-PL-2.1
OSL-1.0
OSL-1.1
OSL-2.0
OSL-2.1
OSL-3.0
PDDL-1.0
PHP-3.0
PHP-3.01
Plexus
PostgreSQL
psfrag
psutils
Python-2.0
Qhull
QPL-1.0
Rdisc
RHeCos-1.1
RPL-1.1
RPL-1.5
RPSL-1.0
RSA-MD
RSCPL
Ruby
SAX-PD
Saxpath
SCEA
Sendmail-8.23
Sendmail
SGI-B-1.0
SGI-B-1.1
SGI-B-2.0
SimPL-2.0
SISSL-1.2
SISSL
Sleepycat
SMLNJ
SMPPL
SNIA
Spencer-86
Spencer-94
Spencer-99
SPL-1.0
SugarCRM-1.1.3
SWL
TCL
TCP-wrappers
TMate
TORQUE-1.1
TOSL
TU-Berlin-1.0
TU-Berlin-2.0
Unicode-DFS-2015
Unicode-DFS-2016
Unicode-TOU
Unlicense
UPL-1.0
Vim
VOSTROM
VSL-1.0
W3C-19980720
W3C-20150513
W3C
Watcom-1.0
Wsuipa
WTFPL
X11
Xerox
XFree86-1.1
xinetd
Xnet
xpp
XSkat
YPL-1.0
YPL-1.1
Zed
Zend-2.0
Zimbra-1.3
Zimbra-1.4
zlib-acknowledgement
Zlib
ZPL-1.1
ZPL-2.0
ZPL-2.1
proprietary
SSPL
custom:[^,;]*"  | tr '\n' '|')

ret=0
for template; do
	if [ -f "$template" ]; then
	scan 'short_desc=.*\."' "unwanted trailing dot in short_desc"
	scan 'short_desc=["'\''][a-z]' "short_desc should start uppercase"
	scan 'short_desc=["'\''](An?|The) ' "short_desc should not start with an article"
	scan 'short_desc=["'\''][\t ]' "short_desc should not start with whitespace"
	scan 'short_desc=["'\''].{73}' "short_desc should be less than 72 chars"
	scan 'license=.*[^NL]GPL[^-]' "license GPL without version"
	scan 'license=.*SSPL' "Uses the SSPL license, which is not packageable"
	scan 'license=.*LGPL[^-]' "license LGPL without version"
	if ! grep -q vlicense "$template"; then
		for l in custom AGPL MIT BSD ISC; do
			scan "license=.*$l" "license '$l', but no use of vlicense"
		done
	fi
	if grep -q 'license=.*' "$template"; then
		if ! grep -q -E "license=\"(($licenses), )*($licenses)\"" "$template"; then
			echo "license not spdx"
		fi
	fi
	if ! sed -n '/^version=/{n;/revision=/b;q1}' "$template"; then
		scan 'revision=' "revision does not appear immediately after version"
	fi
	scan 'vinstall.* 0?755.*usr/bin' "use vbin"
	scan 'vinstall.* usr/share/man' "use vman"
	scan 'vinstall.* usr/share/licenses' "use vlicense"
	scan '^  ' "indent with tabs" | once
	scan '[\t ]$' "trailing whitespace"
	scan '[^\\]`' "use \$() instead of backticks"
	scan '^pkgname="[^$]+"' "pkgname must not be quoted"
	scan 'revision=0' "revision must not be zero"
	scan '^version=.*[:-].*' "version must not contain the characters : or -"
	scan '^version=.*\${.*[:!#%/^,@].*}.*' "version must not use shell variable substitution mechanism"
	scan '^version="[^$]+"' "version must not be quoted"
	scan '^reverts=.*-.*' "reverts must not contain package name"
	scan '^reverts=(?!.*_.*).*' "reverts without revision"
	scan 'replaces=(?=.*\w)[^<>]*$' "replaces needs depname with version"
	scan 'maintainer=(?!.*<.*@.*>).*' "maintainer needs email address"
	scan 'maintainer=.*<.*@users.noreply.github.com>.*' "maintainer needs a valid address for sending mail"
	scan 'nonfree=' "use repository=nonfree"
	scan '^(?!\s*('"$variables"'))[^\s=-]+=' \
		"custom variables should use _ prefix: \2"
	scan '^[^ =]*=(""|''|)$' "variable set to empty string: \2"
	scan '^(.*)-docs_package().*' 'use <pkgname>-doc subpackage for documentation'
	scan 'distfiles=.*github.com.*/archive/.*\.zip[\"]?$' 'Use the distfile .tar.gz instead of .zip'
	scan 'distfiles=.*downloads\.sourceforge\.net' 'use $SOURCEFORGE_SITE'
	scan 'distfiles=.*savannah.nongnu\.org' 'use $NONGNU_SITE'
	scan 'distfiles=.*archive\.ubuntu\.com' 'use $UBUNTU_SITE'
	scan 'distfiles=.*xorg\.freedesktop\.org' 'use $XORG_SITE'
	scan 'distfiles=.*ftp.*debian\.org' 'use $DEBIAN_SITE'
	scan 'distfiles=.*gnome\.org/pub' 'use $GNOME_SITE'
	scan 'distfiles=.*www\.kernel\.org/pub/linux' 'use $KERNEL_SITE'
	scan 'distfiles=.*cpan\.org/modules/by-module' 'use $CPAN_SITE'
	scan 'distfiles=.*pypi\.python\.org' 'use $PYPI_SITE'
	scan 'distfiles=.*ftp\.mozilla\.org' 'use $MOZILLA_SITE'
	scan 'distfiles=.*ftp\.gnu\.org/(pub/)?gnu' 'use $GNU_SITE'
	scan 'distfiles=.*freedesktop\.org/software' 'use $FREEDESKTOP_SITE'
	scan 'distfiles=.*download.kde.org/stable' 'use $KDE_SITE'
	scan 'usr/lib/python3.[0-9]/site-packages' 'use $py3_sitelib'
	scan '^wrksrc=(\$\{[^}]+\}|[^${}/])*/.+' 'wrksrc should be a top-level directory'
	scan '^\t*function\b' 'do not use the function keyword'
	scan '^\t*[^ ]*  *\(\)' 'do not use space before function parenthesis'
	scan '^\t*[^ ]*\(\)(|   *){' 'use one space after function parenthesis'
	scan '^\t*[^ ]*\(\)$' 'do not use a newline before function opening brace'
	pkgname=$(grep -Po "^pkgname=\K.*" "$template")
	version=$(grep -Po "^version=\K.*" "$template")
	scan "distfiles=.*\Q$version\E" 'use ${version} in distfiles instead'
	variables_order
	header
	else
	echo no such template "$template" 1>&2
	fi | sort -t: -n -k2 | grep . && ret=1
done
exit $ret
