#!/bin/sh
# xlocate [-u | -g | -S | PATTERN] - locate files in all XBPS packages

: ${XLOCATE_DB:=~/.cache/xlocate.db}
: ${XLOCATE_GIT:=~/.cache/xlocate.git}
: ${XLOCATE_REPO:=https://repo.voidlinux.eu/xlocate/xlocate.git}

if command -v pv >/dev/null; then
	PROGRESS="pv -l"
else
	PROGRESS=cat
fi

xupdatedb() {
	echo "xlocate: reindexing database..." 1>&2
	xbps-query -Ro '*' |
		$PROGRESS |
		sed 's/ *([^)]*)$//; s|: ||; s,^,/,' |
		/usr/libexec/frcode >"$XLOCATE_DB"
}

xupdategit() {
	set -e
	DIR=$(mktemp -dt xlocate.XXXXXX)
	DIR=$(/usr/bin/realpath -e "$DIR")
	git init -q $DIR
	cd $DIR
	xbps-query -M -Ro '*' | $PROGRESS | awk '
		$0 ~ ": " {
			s = index($0, ": ")
			pkg = substr($0, 1, s-1)
			file = substr($0, s+2)
			sub(" *\\([^)]*\\)$", "", file)
			print file >>pkg
	       	}'
	printf '%s\n' ./* |
		LC_ALL= xargs -d'\n' -I'{}' -n1 -P "$(nproc)" -r -- \
			sort -o {} {}
	git add ./*
	git -c user.name=xupdategit -c user.email=xupdategit@none commit -q -m 'xupdategit'
	git repack -ad
	rm -rf "$XLOCATE_GIT" .git/COMMIT_EDITMSG .git/description \
		.git/index .git/hooks .git/logs
	[ -n "${XLOCATE_GIT%/*}" ] && mkdir -p "${XLOCATE_GIT%/*}"
	mv .git "$XLOCATE_GIT"
	rm -rf "$DIR"
}

xsyncgit() {
	if ! [ -d "$XLOCATE_GIT" ]; then
		[ -n "${XLOCATE_GIT%/*}" ] && mkdir -p "${XLOCATE_GIT%/*}"
		git clone --bare "$XLOCATE_REPO" "$XLOCATE_GIT"
	fi
	git -C "$XLOCATE_GIT" fetch -u -f "$XLOCATE_REPO" master:master
}

if [ "$1" = -u ]; then
	xupdatedb
	exit $?
elif [ "$1" = -g ]; then
	xupdategit
	exit $?
elif [ "$1" = -S ]; then
	xsyncgit
	exit $?
fi

if [ -d "$XLOCATE_GIT" ]; then
	if [ -f "$XLOCATE_GIT/refs/heads/master" ]; then
		BASE="$XLOCATE_GIT/refs/heads/master"
	elif [ -f "$XLOCATE_GIT/FETCH_HEAD" ]; then
		BASE="$XLOCATE_GIT/FETCH_HEAD"
	fi
	if [ -z "$BASE" ] || find /var/db/xbps/ -name '*repodata' -newer "$BASE" | grep -q .; then
		if grep -q origin "$XLOCATE_GIT/config"; then
			echo "xlocate: database outdated, please run xlocate -S." 1>&2
		else
			echo "xlocate: database outdated, please run xlocate -g." 1>&2
		fi
	fi
	git -c grep.lineNumber=false --git-dir="$XLOCATE_GIT" grep "$@" @ |
		sed 's/^@://; s/:/	/' | grep .
elif [ -e "$XLOCATE_DB" ]; then
	if find /var/db/xbps/ -name '*repodata' -newer "$XLOCATE_DB" | grep -q .; then
		echo "xlocate: database outdated, please run xlocate -u." 1>&2
	fi
	rx=
	case "$1" in
		# Just . is unlikely to be a regex here...
		*[*+\\\[\]^$]*) rx=-r;;
	esac
	# XXX also matches template in package name.
	glocate $rx -d "$XLOCATE_DB" "$1" |
		sed 's|^/\([^/]*\)-[^-/]*/|\1	/|'
else
	xbps-query --regex -Ro "$@" |
		sed 's/ *([^)]*)$//; s/^\([^ ]*\)-[^-]*: /\1	/'
fi
